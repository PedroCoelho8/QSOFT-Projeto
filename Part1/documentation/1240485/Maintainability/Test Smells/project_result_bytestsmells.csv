projectName;name;pathFile;productionFile;junitVersion;loc;qtdMethods;testSmellName;testSmellMethod;testSmellLineBegin;testSmellLineEnd;methodNameHash;methodNameFullHash;methodCode;methodCodeHash;FullHash
qsofttestestest;OwnerTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\OwnerTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Owner.java;JUnit4;150;10;Unknown Test;ownerClassesShouldOnlyHaveDependenciesOnItsClasses;20-31;20-31;ebe3178b57bfdd28dee995d9beb2aa5d;113c5637f2c580bc24cee19e7a407d3f;@TestpublicvoidownerClassesShouldOnlyHaveDependenciesOnItsClasses(){ArchRulerule=classes().that().haveNameMatching(".*Owner").should().onlyHaveDependentClassesThat().haveSimpleNameContaining("Owner")|rule.check(importedClasses)|};847fb3fcb887635d7cc1866a993899c7;5b9f21b98499301fd0a2facef25842fe
qsofttestestest;OwnerTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\OwnerTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Owner.java;JUnit4;150;10;Unknown Test;classAndPackageContainment;35-65;35-65;ba62dc6db7dd9710d999e5e2d14eaaf7;0ea3f9159ef7d3b457515e5b75bbb869;@TestpublicvoidclassAndPackageContainment(){ArchRuleone=classes().that().haveSimpleName("OwnerRestController").should().resideInAnyPackage(MAINPACKAGE+".rest.controller..")|ArchRuletwo=classes().that().haveSimpleName("OwnerRepository").should().resideInAnyPackage(MAINPACKAGE+".repository..")|ArchRulethree=classes().that().haveSimpleName("JpaOwnerRepositoryImpl").should().resideInAnyPackage(MAINPACKAGE+".repository.jpa..")|ArchRulefour=classes().that().haveSimpleName("OwnerDto").should().resideInAnyPackage(MAINPACKAGE+".rest.dto..")|one.check(importedClasses)|two.check(importedClasses)|three.check(importedClasses)|four.check(importedClasses)|};ed5c98631fef3803c3d8c9f1310df603;961d9fbc1ce3b0433d5bc9c6db7781eb
qsofttestestest;OwnerTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\OwnerTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Owner.java;JUnit4;150;10;Unknown Test;domainPackageShouldNotDependOnAnyPackage;69-83;69-83;930994af27a2335c29011c2c02f95a89;75c6a967567854c5eb75a13be2e2f1e2;@TestpublicvoiddomainPackageShouldNotDependOnAnyPackage(){ArchRulerule=noClasses().that().haveNameMatching(MAINPACKAGE+".model.Owner").should().dependOnClassesThat().resideInAnyPackage(MAINPACKAGE+".controller..",MAINPACKAGE+".repository..",MAINPACKAGE+".dto..")|rule.check(importedClasses)|};bbf02d59243318f5b553dbdaa745bbaa;8e142d5e722a66358bea7c415a0df4f7
qsofttestestest;OwnerTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\OwnerTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Owner.java;JUnit4;150;10;Unknown Test;repositoryShouldOnlyDependOnDTOAndPersistence;85-96;85-96;a14b858b919b49ce8c775a9a0ad5eeec;b3c4922fd257de8f7b355a3831f07546;@TestpublicvoidrepositoryShouldOnlyDependOnDTOAndPersistence(){ArchRulerule=classes().that().haveNameMatching(MAINPACKAGE+".repository.OwnerRepository").should().dependOnClassesThat().resideInAnyPackage(MAINPACKAGE+".model..",MAINPACKAGE+".jpa..")|rule.check(importedClasses)|};9c8df1dd2b7c6d2f3f5edb80788c6a17;9b4bb6677564dbadfce591ba8a2aa90f
qsofttestestest;OwnerTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\OwnerTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Owner.java;JUnit4;150;10;Unknown Test;checkRepositoryClassesInheritance;100-110;100-110;4386544cd9dc7e82e7b1badfe8f31715;5ce8142a0c8238fadec5a5ae33f019db;@TestpublicvoidcheckRepositoryClassesInheritance(){ArchRulerule=classes().that().resideInAnyPackage(MAINPACKAGE+".repository.jpa..").and().haveSimpleNameContaining("JpaRepository").should().beAssignableTo(JpaRepository.class)|rule.check(importedClasses)|};9eb8804b5bddd261b9466e24e678bf0f;46d12467cdaa4245125e06c3c18557e7
qsofttestestest;OwnerTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\OwnerTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Owner.java;JUnit4;150;10;Unknown Test;checkControllersAnnotations;112-122;112-122;7773b6f8dbb930f75583df38a55b33a8;791a344a585267af6a9afe79b2036c0e;@TestpublicvoidcheckControllersAnnotations(){ArchRulerule=classes().that().resideInAnyPackage(MAINPACKAGE+".controller..").should().beAnnotatedWith(RestController.class)|rule.check(importedClasses)|};c93817f2593139e3d5883930faa293ef;850260739cdabe8556919c723d9e4131
qsofttestestest;OwnerTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\OwnerTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Owner.java;JUnit4;150;10;Unknown Test;checkLayeredArchitecture;125-140;125-140;b6ec3bf4fe98b28b8b510c9f7c60e89f;2bafd38a752eae6ee1b0db2225a5993d;@TestpublicvoidcheckLayeredArchitecture(){ArchRulerule=layeredArchitecture().consideringOnlyDependenciesInLayers().layer("Controller").definedBy(MAINPACKAGE+".rest.controller..").layer("DTO").definedBy(MAINPACKAGE+".rest.dto..").layer("Model").definedBy(MAINPACKAGE+".model..").layer("Repository").definedBy(MAINPACKAGE+".repository..").whereLayer("Controller").mayOnlyAccessLayers("DTO","Repository","Model").whereLayer("DTO").mayOnlyAccessLayers("Model").whereLayer("Model").mayNotAccessAnyLayer().whereLayer("Repository").mayOnlyAccessLayers("Model")|rule.check(importedClasses)|};5f21e9640e2724fe2b4ccbaa5aaed542;377f96ef8b40dd17722430d1ae329c00
qsofttestestest;OwnerTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\OwnerTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Owner.java;JUnit4;150;10;Unknown Test;checkCycles;144-148;144-148;b081ee9452ca7140f0e4a0715a697e2b;f34ec38512d4d7d8e7bd90f675cbe896;@TestpublicvoidcheckCycles(){ArchRulerule=slices().matching(MAINPACKAGE+".(*)..").should().beFreeOfCycles()|rule.check(importedClasses)|};5a004e98a9401e60a9c5509ba5657721;68102f88e436c5e57a27003812d190a9
qsofttestestest;VetTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\VetTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Vet.java;JUnit4;145;11;Unknown Test;domainPackageShouldNotDependOnAnyPackage;20-31;20-31;930994af27a2335c29011c2c02f95a89;039a11865681ea0e84c032fc7c443327;@TestpublicvoiddomainPackageShouldNotDependOnAnyPackage(){noClasses().that().haveNameMatching(MAINPACKAGE+".model.Vet").should().dependOnClassesThat().resideInAnyPackage(MAINPACKAGE+".controller..",MAINPACKAGE+".repository..",MAINPACKAGE+".dto..").check(importedClasses)|};a4a934cf0f3bfe8e50c9bf4a648e2f50;151e5b87976e5f1f5fad4609b6c1c75f
qsofttestestest;VetTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\VetTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Vet.java;JUnit4;145;11;Unknown Test;repositoryShouldOnlyDependOnDTOAndPersistence;34-42;34-42;a14b858b919b49ce8c775a9a0ad5eeec;51af896b0bde9cea5699aead4c0765b7;@TestpublicvoidrepositoryShouldOnlyDependOnDTOAndPersistence(){classes().that().haveNameMatching(MAINPACKAGE+".repository.VetRepository").should().dependOnClassesThat().resideInAnyPackage(MAINPACKAGE+".model..",MAINPACKAGE+".jpa..").check(importedClasses)|};9e0e8f2a66313cc6df37dbdcdd63e389;74cfceffdaeb4295b5b09852c68f4c0e
qsofttestestest;VetTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\VetTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Vet.java;JUnit4;145;11;Unknown Test;vetClassesShouldOnlyHaveDependenciesOnItsClasses;46-54;46-54;0dacb89898a1b9a44539f6f432870288;16fc05b38f3197927cdc841b416c0ae2;@TestpublicvoidvetClassesShouldOnlyHaveDependenciesOnItsClasses(){classes().that().haveNameMatching(".*Vet*").should().onlyHaveDependentClassesThat().haveSimpleNameContaining("Vet").check(importedClasses)|};f9f7c3c59ba62fdc3bbe413c7b8b5a4e;d3a5b5b1a53456e103dd0d29f0308102
qsofttestestest;VetTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\VetTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Vet.java;JUnit4;145;11;Unknown Test;classAndPackageContainment;58-87;58-87;ba62dc6db7dd9710d999e5e2d14eaaf7;70041036a0565834e5e21a84492903aa;@TestpublicvoidclassAndPackageContainment(){classes().that().haveSimpleName("VetRestController").should().resideInAnyPackage(MAINPACKAGE+".rest.controller..").check(importedClasses)|classes().that().haveSimpleName("VetRepository").should().resideInAnyPackage(MAINPACKAGE+".repository..").check(importedClasses)|classes().that().haveSimpleName("JpaVetRepositoryImpl").should().resideInAnyPackage(MAINPACKAGE+".repository.jpa..").check(importedClasses)|classes().that().haveSimpleName("VetDto").should().resideInAnyPackage(MAINPACKAGE+".rest.dto..").check(importedClasses)|};f5e1bac26d7bf7f7d2ab9b63261652a4;0842cb94277b34bb1eebceabcbeb12f6
qsofttestestest;VetTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\VetTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Vet.java;JUnit4;145;11;Unknown Test;checkVetRepositoryClassInheritance;90-98;90-98;ac1c0981b5dfe373cf0ca0bacdbd54de;68ff1c17c06b9be4dad1bb457a312939;@TestpublicvoidcheckVetRepositoryClassInheritance(){classes().that().resideInAnyPackage(MAINPACKAGE+".repository.jpa..").and().haveSimpleNameContaining("JpaVetRepository").should().beAssignableTo(VetRepository.class).check(importedClasses)|};4e212e3c8ede6aa8d9870f0528c55a61;4e27bb1b500fdfff347b5dc3d5b168fa
qsofttestestest;VetTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\VetTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Vet.java;JUnit4;145;11;Unknown Test;vetClassesShouldInheritFromBaseClass;100-105;100-105;b811556e831e7784f99859d0560efc66;04560afdaefd3170f5ff7a9f0f2e1803;@TestpublicvoidvetClassesShouldInheritFromBaseClass(){classes().that().haveSimpleName("Vet").should().beAssignableTo(Person.class).check(importedClasses)|};838bc3aba7e1c657142e5407bba23d2a;0729c8a9ad8cabc0d6627c79386ccabb
qsofttestestest;VetTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\VetTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Vet.java;JUnit4;145;11;Unknown Test;checkVetRestControllerAnnotation;109-115;109-115;592ce45a5cacd345aa84040f97f5a0c1;c9a9173e72c883ecf61d73d6d0e5b510;@TestpublicvoidcheckVetRestControllerAnnotation(){classes().that().haveSimpleName("VetRestController").should().beAnnotatedWith(RestController.class).check(importedClasses)|};ceff24d606ff7192962677280e8dbce3;547b1239d8336f48be05c628a9e85571
qsofttestestest;VetTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\VetTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Vet.java;JUnit4;145;11;Unknown Test;checkLayeredArchitecture;120-134;120-134;b6ec3bf4fe98b28b8b510c9f7c60e89f;dd9b76fe698ac4bd5994d0cafe86c603;@TestpublicvoidcheckLayeredArchitecture(){layeredArchitecture().consideringOnlyDependenciesInLayers().layer("Controller").definedBy(MAINPACKAGE+".rest.controller..").layer("DTO").definedBy(MAINPACKAGE+".rest.dto..").layer("Model").definedBy(MAINPACKAGE+".model..").layer("Repository").definedBy(MAINPACKAGE+".repository..").whereLayer("Controller").mayOnlyAccessLayers("DTO","Repository","Model").whereLayer("DTO").mayOnlyAccessLayers("Model").whereLayer("Model").mayNotAccessAnyLayer().whereLayer("Repository").mayOnlyAccessLayers("Model").check(importedClasses)|};aae60f837ba7fef7878abd87d0325d1b;da0b0e3f63da909486fabaaf0d5c0df1
qsofttestestest;VetTest;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\ArchUnitTests\VetTest.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\model\Vet.java;JUnit4;145;11;Unknown Test;checkCycles;138-143;138-143;b081ee9452ca7140f0e4a0715a697e2b;93175116b8297883c862b915ccad4a2e;@TestpublicvoidcheckCycles(){slices().matching(MAINPACKAGE+".(*)..").should().beFreeOfCycles().check(importedClasses)|};75ecd71c86fdb63f8ac398d27594533a;b91cc0ab7680b391518d9958f8a91b61
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testGetOwnerSuccess;150-160;150-160;776232c612ac0de6012e36a7bcde18ca;a5ab688fdb59443f9bd279874dd60847;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnerSuccess()throwsException{given(this.clinicService.findOwnerById(1)).willReturn(ownerMapper.toOwner(owners.get(0)))|this.mockMvc.perform(get("/api/owners/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.firstName").value("George"))|};c229781e3cd571d3d43b3d7c1993be86;19cf85eb51d7bb6e7722763d6550a60a
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testGetOwnerNotFound;162-169;162-169;27191e6ba966b7b426a8ff8feb35f511;71adb55c819fb06cd0278eeec7bba2b0;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnerNotFound()throwsException{given(this.clinicService.findOwnerById(2)).willReturn(null)|this.mockMvc.perform(get("/api/owners/2").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};3811028e9d4fdb9c9ce07db2c9c73b3f;4e800e93f5f21cceeeeefcd5fdd43bbf
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testGetOwnersListSuccess;171-185;171-185;08a5b63616e13ffbb7aa9360f3e2d8bf;11b7ca19ba13f02d4b4ea686ace9e6bd;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnersListSuccess()throwsException{owners.remove(0)|owners.remove(1)|given(this.clinicService.findOwnerByLastName("Davis")).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners?lastName=Davis").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].firstName").value("Betty")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].firstName").value("Harold"))|};f78f7851249ed87d724d37fb0d4674e9;9debad25ec559d4a6d89253efe70dea2
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testGetOwnersListNotFound;187-195;187-195;9813d0453ebd50160bf2a8ba304bee72;c9524e27f9d0b46c4a019d47f3fe58a1;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnersListNotFound()throwsException{owners.clear()|given(this.clinicService.findOwnerByLastName("0")).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners/?lastName=0").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};cb3f99a19c577c9073befb8acaad4707;cc07d23dd2f45110d91ea22225116b99
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testGetAllOwnersSuccess;197-211;197-211;ba76750f05a754dc0e69ac59deebfa7b;56a6777818e5c6fb9d8c273a327d2283;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllOwnersSuccess()throwsException{owners.remove(0)|owners.remove(1)|given(this.clinicService.findAllOwners()).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].firstName").value("Betty")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].firstName").value("Harold"))|};6d60c4821381a94782928028ac024b7a;8736e06873da87c2342615689619f1ae
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testGetAllOwnersNotFound;213-221;213-221;5b667d4a6b8f41de04edb85dcf056e0a;656f72e6826b099a2867eeb2cb5b1270;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllOwnersNotFound()throwsException{owners.clear()|given(this.clinicService.findAllOwners()).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};cdd998e7f5d3571127455ac673458da4;bce63e85741e3dbd58113706d6e41751
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testCreateOwnerSuccess;223-235;223-235;ae5ff7346179cc6adf9cce3ace6aa271;eccbfde2a0bea11325177ee8e5a23d3d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateOwnerSuccess()throwsException{OwnerDtonewOwnerDto=owners.get(0)|newOwnerDto.setId(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|this.mockMvc.perform(post("/api/owners/").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};e6e3b13e7bf43390105cdb26baa4ebb2;217f0157e73601332028ff3ac1491152
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testCreateOwnerError;237-250;237-250;e22d11aad295731fb449d5c7096e2b42;a297fafdfadcb1d5a26bea26fd3afc0e;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateOwnerError()throwsException{OwnerDtonewOwnerDto=owners.get(0)|newOwnerDto.setId(null)|newOwnerDto.setFirstName(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|this.mockMvc.perform(post("/api/owners/").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};c51f2718934036f156c534e978b7e852;7cafe6ffba3fb0769cf4dce2c1d2c13f
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testUpdateOwnerSuccess;252-281;252-281;e8212e58ecd6b42044f42d2e7fbb6364;02ee2c484906f497a98459317953264b;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateOwnerSuccess()throwsException{given(this.clinicService.findOwnerById(1)).willReturn(ownerMapper.toOwner(owners.get(0)))|intownerId=owners.get(0).getId()|OwnerDtoupdatedOwnerDto=newOwnerDto()|//body.id=ownerIdwhichisusedinurlpathupdatedOwnerDto.setId(ownerId)|updatedOwnerDto.setFirstName("GeorgeI")|updatedOwnerDto.setLastName("Franklin")|updatedOwnerDto.setAddress("110W.LibertySt.")|updatedOwnerDto.setCity("Madison")|updatedOwnerDto.setTelephone("6085551023")|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewOwnerAsJSON=mapper.writeValueAsString(updatedOwnerDto)|this.mockMvc.perform(put("/api/owners/"+ownerId).content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/owners/"+ownerId).accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(ownerId)).andExpect(jsonPath("$.firstName").value("GeorgeI"))|};56fbddd6434ff6db35e78254712e68b3;82f3ca302aac1707114b5f27ab3a1051
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testUpdateOwnerSuccessNoBodyId;283-309;283-309;27bc687e1e1b6b7754d785b07d3f41cc;ebf620cad1c75cef1e111eed1ddb28d1;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateOwnerSuccessNoBodyId()throwsException{given(this.clinicService.findOwnerById(1)).willReturn(ownerMapper.toOwner(owners.get(0)))|intownerId=owners.get(0).getId()|OwnerDtoupdatedOwnerDto=newOwnerDto()|updatedOwnerDto.setFirstName("GeorgeI")|updatedOwnerDto.setLastName("Franklin")|updatedOwnerDto.setAddress("110W.LibertySt.")|updatedOwnerDto.setCity("Madison")|updatedOwnerDto.setTelephone("6085551023")|ObjectMappermapper=newObjectMapper()|StringnewOwnerAsJSON=mapper.writeValueAsString(updatedOwnerDto)|this.mockMvc.perform(put("/api/owners/"+ownerId).content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/owners/"+ownerId).accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(ownerId)).andExpect(jsonPath("$.firstName").value("GeorgeI"))|};a73445ae82bf3ed03b61e782074fb369;253798c18fb19c1a06f6cd8f93135c48
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testUpdateOwnerError;311-322;311-322;bf081ab3581622d11cc37337c6bcb8d4;b466d53fc84a603523f595e2dd774741;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateOwnerError()throwsException{OwnerDtonewOwnerDto=owners.get(0)|newOwnerDto.setFirstName("")|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|this.mockMvc.perform(put("/api/owners/1").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};7ac5753378a84a3f9fa51860dd6d9e72;d9de8cc067a1c2cd020e3e8bedd557f6
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testDeleteOwnerSuccess;324-336;324-336;8f22a37485027df8001ce304901666a5;cb4a8ad056e067e3e6017e136858937b;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeleteOwnerSuccess()throwsException{OwnerDtonewOwnerDto=owners.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|finalOwnerowner=ownerMapper.toOwner(owners.get(0))|given(this.clinicService.findOwnerById(1)).willReturn(owner)|this.mockMvc.perform(delete("/api/owners/1").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};d5032106d0f87f8b4afff6433e4ce0dc;96ede67b9b85415ecf8f6b235595f4ea
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testDeleteOwnerError;338-349;338-349;a7b747bf1ada1a8ab26e84cd3133c03d;59949aaae441a3f25c05d6649f5d3e3d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeleteOwnerError()throwsException{OwnerDtonewOwnerDto=owners.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|given(this.clinicService.findOwnerById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/owners/999").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};d63a5c3c2c4af3fd63b34b217c61d6bd;7ffe91212268c7def6168ddc7ac8094e
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testCreatePetSuccess;351-365;351-365;e9579ba4940af17bf8030b9cde3bdb31;95bfa2c8f6fc896ce7dcf3d19cda099c;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreatePetSuccess()throwsException{PetDtonewPet=pets.get(0)|newPet.setId(999)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.setDateFormat(newSimpleDateFormat("yyyy-MM-dd"))|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|System.err.println("-->newPetAsJSON="+newPetAsJSON)|this.mockMvc.perform(post("/api/owners/1/pets/").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};2714fca6b64dd388c118b192047e4948;494d6992539e067f5e70290e683e7b7d
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testCreatePetError;367-381;367-381;dc959d4a827e72204e58c79fcccf1527;6dab8c24017f237be622307643c6aa4e;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreatePetError()throwsException{PetDtonewPet=pets.get(0)|newPet.setId(null)|newPet.setName(null)|ObjectMappermapper=newObjectMapper()|mapper.setDateFormat(newSimpleDateFormat("yyyy-MM-dd"))|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|this.mockMvc.perform(post("/api/owners/1/pets/").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest()).andDo(MockMvcResultHandlers.print())|};7e5938bef8ea5f2c8e74b48586cb2004;13ca1f039142d5557688b20fc0a0e72c
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testCreateVisitSuccess;383-396;383-396;b0af7ff5a350a288c0d7163d3abdd99c;3312169ca19fa4035439d128a8254c0a;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateVisitSuccess()throwsException{VisitDtonewVisit=visits.get(0)|newVisit.setId(999)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisit(newVisit))|System.out.println("newVisitAsJSON"+newVisitAsJSON)|this.mockMvc.perform(post("/api/owners/1/pets/1/visits").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};32326eb643d3db9493a6247d064586c7;5a9e8b9331d62eb69da4561cdd25fdbc
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testGetOwnerPetSuccess;398-410;398-410;124b31827d02bc8892d0d00c4962975c;b277e0031439bf175e6bc1e2559e1380;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnerPetSuccess()throwsException{varowner=ownerMapper.toOwner(owners.get(0))|given(this.clinicService.findOwnerById(2)).willReturn(owner)|varpet=petMapper.toPet(pets.get(0))|pet.setOwner(owner)|given(this.clinicService.findPetById(1)).willReturn(pet)|this.mockMvc.perform(get("/api/owners/2/pets/1").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json"))|};44ca1a04ed3671378ab47e5e2416f2a2;2bc6f53071f410d32c13b87c8a22c315
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testGetOwnersPetsWithOwnerNotFound;412-420;412-420;ce744b75f2094392456a07753259393e;26b67b024caca971576d4f7c9cf97b8a;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnersPetsWithOwnerNotFound()throwsException{owners.clear()|given(this.clinicService.findAllOwners()).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners/1/pets/1").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};1597054a86de884c4100c5014333ec96;4b67e1c48d01f949b6a405c93006a7e0
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Unknown Test;testGetOwnersPetsWithPetNotFound;422-430;422-430;9467b2173b6881468230f44de4eef355;7a4f8612531bea753c6e66f2794a3ebf;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnersPetsWithPetNotFound()throwsException{varowner1=ownerMapper.toOwner(owners.get(0))|given(this.clinicService.findOwnerById(1)).willReturn(owner1)|this.mockMvc.perform(get("/api/owners/1/pets/2").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};2f01dbf2445d687c5e373ad4e1ebe2a8;48f869522cf1efd35ca4c09ff60974b9
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testGetOwnerSuccess;150-160;150-160;776232c612ac0de6012e36a7bcde18ca;a5ab688fdb59443f9bd279874dd60847;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnerSuccess()throwsException{given(this.clinicService.findOwnerById(1)).willReturn(ownerMapper.toOwner(owners.get(0)))|this.mockMvc.perform(get("/api/owners/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.firstName").value("George"))|};c229781e3cd571d3d43b3d7c1993be86;19cf85eb51d7bb6e7722763d6550a60a
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testGetOwnerNotFound;162-169;162-169;27191e6ba966b7b426a8ff8feb35f511;71adb55c819fb06cd0278eeec7bba2b0;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnerNotFound()throwsException{given(this.clinicService.findOwnerById(2)).willReturn(null)|this.mockMvc.perform(get("/api/owners/2").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};3811028e9d4fdb9c9ce07db2c9c73b3f;4e800e93f5f21cceeeeefcd5fdd43bbf
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testGetOwnersListSuccess;171-185;171-185;08a5b63616e13ffbb7aa9360f3e2d8bf;11b7ca19ba13f02d4b4ea686ace9e6bd;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnersListSuccess()throwsException{owners.remove(0)|owners.remove(1)|given(this.clinicService.findOwnerByLastName("Davis")).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners?lastName=Davis").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].firstName").value("Betty")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].firstName").value("Harold"))|};f78f7851249ed87d724d37fb0d4674e9;9debad25ec559d4a6d89253efe70dea2
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testGetOwnersListNotFound;187-195;187-195;9813d0453ebd50160bf2a8ba304bee72;c9524e27f9d0b46c4a019d47f3fe58a1;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnersListNotFound()throwsException{owners.clear()|given(this.clinicService.findOwnerByLastName("0")).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners/?lastName=0").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};cb3f99a19c577c9073befb8acaad4707;cc07d23dd2f45110d91ea22225116b99
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testGetAllOwnersSuccess;197-211;197-211;ba76750f05a754dc0e69ac59deebfa7b;56a6777818e5c6fb9d8c273a327d2283;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllOwnersSuccess()throwsException{owners.remove(0)|owners.remove(1)|given(this.clinicService.findAllOwners()).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].firstName").value("Betty")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].firstName").value("Harold"))|};6d60c4821381a94782928028ac024b7a;8736e06873da87c2342615689619f1ae
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testGetAllOwnersNotFound;213-221;213-221;5b667d4a6b8f41de04edb85dcf056e0a;656f72e6826b099a2867eeb2cb5b1270;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllOwnersNotFound()throwsException{owners.clear()|given(this.clinicService.findAllOwners()).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};cdd998e7f5d3571127455ac673458da4;bce63e85741e3dbd58113706d6e41751
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testCreateOwnerSuccess;223-235;223-235;ae5ff7346179cc6adf9cce3ace6aa271;eccbfde2a0bea11325177ee8e5a23d3d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateOwnerSuccess()throwsException{OwnerDtonewOwnerDto=owners.get(0)|newOwnerDto.setId(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|this.mockMvc.perform(post("/api/owners/").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};e6e3b13e7bf43390105cdb26baa4ebb2;217f0157e73601332028ff3ac1491152
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testCreateOwnerError;237-250;237-250;e22d11aad295731fb449d5c7096e2b42;a297fafdfadcb1d5a26bea26fd3afc0e;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateOwnerError()throwsException{OwnerDtonewOwnerDto=owners.get(0)|newOwnerDto.setId(null)|newOwnerDto.setFirstName(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|this.mockMvc.perform(post("/api/owners/").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};c51f2718934036f156c534e978b7e852;7cafe6ffba3fb0769cf4dce2c1d2c13f
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testUpdateOwnerSuccess;252-281;252-281;e8212e58ecd6b42044f42d2e7fbb6364;02ee2c484906f497a98459317953264b;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateOwnerSuccess()throwsException{given(this.clinicService.findOwnerById(1)).willReturn(ownerMapper.toOwner(owners.get(0)))|intownerId=owners.get(0).getId()|OwnerDtoupdatedOwnerDto=newOwnerDto()|//body.id=ownerIdwhichisusedinurlpathupdatedOwnerDto.setId(ownerId)|updatedOwnerDto.setFirstName("GeorgeI")|updatedOwnerDto.setLastName("Franklin")|updatedOwnerDto.setAddress("110W.LibertySt.")|updatedOwnerDto.setCity("Madison")|updatedOwnerDto.setTelephone("6085551023")|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewOwnerAsJSON=mapper.writeValueAsString(updatedOwnerDto)|this.mockMvc.perform(put("/api/owners/"+ownerId).content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/owners/"+ownerId).accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(ownerId)).andExpect(jsonPath("$.firstName").value("GeorgeI"))|};56fbddd6434ff6db35e78254712e68b3;82f3ca302aac1707114b5f27ab3a1051
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testUpdateOwnerSuccessNoBodyId;283-309;283-309;27bc687e1e1b6b7754d785b07d3f41cc;ebf620cad1c75cef1e111eed1ddb28d1;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateOwnerSuccessNoBodyId()throwsException{given(this.clinicService.findOwnerById(1)).willReturn(ownerMapper.toOwner(owners.get(0)))|intownerId=owners.get(0).getId()|OwnerDtoupdatedOwnerDto=newOwnerDto()|updatedOwnerDto.setFirstName("GeorgeI")|updatedOwnerDto.setLastName("Franklin")|updatedOwnerDto.setAddress("110W.LibertySt.")|updatedOwnerDto.setCity("Madison")|updatedOwnerDto.setTelephone("6085551023")|ObjectMappermapper=newObjectMapper()|StringnewOwnerAsJSON=mapper.writeValueAsString(updatedOwnerDto)|this.mockMvc.perform(put("/api/owners/"+ownerId).content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/owners/"+ownerId).accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(ownerId)).andExpect(jsonPath("$.firstName").value("GeorgeI"))|};a73445ae82bf3ed03b61e782074fb369;253798c18fb19c1a06f6cd8f93135c48
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testUpdateOwnerError;311-322;311-322;bf081ab3581622d11cc37337c6bcb8d4;b466d53fc84a603523f595e2dd774741;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateOwnerError()throwsException{OwnerDtonewOwnerDto=owners.get(0)|newOwnerDto.setFirstName("")|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|this.mockMvc.perform(put("/api/owners/1").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};7ac5753378a84a3f9fa51860dd6d9e72;d9de8cc067a1c2cd020e3e8bedd557f6
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testDeleteOwnerSuccess;324-336;324-336;8f22a37485027df8001ce304901666a5;cb4a8ad056e067e3e6017e136858937b;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeleteOwnerSuccess()throwsException{OwnerDtonewOwnerDto=owners.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|finalOwnerowner=ownerMapper.toOwner(owners.get(0))|given(this.clinicService.findOwnerById(1)).willReturn(owner)|this.mockMvc.perform(delete("/api/owners/1").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};d5032106d0f87f8b4afff6433e4ce0dc;96ede67b9b85415ecf8f6b235595f4ea
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testDeleteOwnerError;338-349;338-349;a7b747bf1ada1a8ab26e84cd3133c03d;59949aaae441a3f25c05d6649f5d3e3d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeleteOwnerError()throwsException{OwnerDtonewOwnerDto=owners.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewOwnerAsJSON=mapper.writeValueAsString(newOwnerDto)|given(this.clinicService.findOwnerById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/owners/999").content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};d63a5c3c2c4af3fd63b34b217c61d6bd;7ffe91212268c7def6168ddc7ac8094e
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testCreatePetSuccess;351-365;351-365;e9579ba4940af17bf8030b9cde3bdb31;95bfa2c8f6fc896ce7dcf3d19cda099c;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreatePetSuccess()throwsException{PetDtonewPet=pets.get(0)|newPet.setId(999)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.setDateFormat(newSimpleDateFormat("yyyy-MM-dd"))|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|System.err.println("-->newPetAsJSON="+newPetAsJSON)|this.mockMvc.perform(post("/api/owners/1/pets/").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};2714fca6b64dd388c118b192047e4948;494d6992539e067f5e70290e683e7b7d
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testCreatePetError;367-381;367-381;dc959d4a827e72204e58c79fcccf1527;6dab8c24017f237be622307643c6aa4e;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreatePetError()throwsException{PetDtonewPet=pets.get(0)|newPet.setId(null)|newPet.setName(null)|ObjectMappermapper=newObjectMapper()|mapper.setDateFormat(newSimpleDateFormat("yyyy-MM-dd"))|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|this.mockMvc.perform(post("/api/owners/1/pets/").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest()).andDo(MockMvcResultHandlers.print())|};7e5938bef8ea5f2c8e74b48586cb2004;13ca1f039142d5557688b20fc0a0e72c
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testCreateVisitSuccess;383-396;383-396;b0af7ff5a350a288c0d7163d3abdd99c;3312169ca19fa4035439d128a8254c0a;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateVisitSuccess()throwsException{VisitDtonewVisit=visits.get(0)|newVisit.setId(999)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisit(newVisit))|System.out.println("newVisitAsJSON"+newVisitAsJSON)|this.mockMvc.perform(post("/api/owners/1/pets/1/visits").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};32326eb643d3db9493a6247d064586c7;5a9e8b9331d62eb69da4561cdd25fdbc
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testGetOwnerPetSuccess;398-410;398-410;124b31827d02bc8892d0d00c4962975c;b277e0031439bf175e6bc1e2559e1380;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnerPetSuccess()throwsException{varowner=ownerMapper.toOwner(owners.get(0))|given(this.clinicService.findOwnerById(2)).willReturn(owner)|varpet=petMapper.toPet(pets.get(0))|pet.setOwner(owner)|given(this.clinicService.findPetById(1)).willReturn(pet)|this.mockMvc.perform(get("/api/owners/2/pets/1").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json"))|};44ca1a04ed3671378ab47e5e2416f2a2;2bc6f53071f410d32c13b87c8a22c315
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testGetOwnersPetsWithOwnerNotFound;412-420;412-420;ce744b75f2094392456a07753259393e;26b67b024caca971576d4f7c9cf97b8a;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnersPetsWithOwnerNotFound()throwsException{owners.clear()|given(this.clinicService.findAllOwners()).willReturn(ownerMapper.toOwners(owners))|this.mockMvc.perform(get("/api/owners/1/pets/1").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};1597054a86de884c4100c5014333ec96;4b67e1c48d01f949b6a405c93006a7e0
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;IgnoredTest;testGetOwnersPetsWithPetNotFound;422-430;422-430;9467b2173b6881468230f44de4eef355;7a4f8612531bea753c6e66f2794a3ebf;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetOwnersPetsWithPetNotFound()throwsException{varowner1=ownerMapper.toOwner(owners.get(0))|given(this.clinicService.findOwnerById(1)).willReturn(owner1)|this.mockMvc.perform(get("/api/owners/1/pets/2").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};2f01dbf2445d687c5e373ad4e1ebe2a8;48f869522cf1efd35ca4c09ff60974b9
qsofttestestest;OwnerRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java;JUnit5;433;31;Print Statement;testCreateVisitSuccess;392;392;b0af7ff5a350a288c0d7163d3abdd99c;3312169ca19fa4035439d128a8254c0a
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testGetPetSuccess;106-116;106-116;0a91e008187aa0f10cbaed2d2a52a3b5;f6088a459e1546304ac9dc53b8e3ff9d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetPetSuccess()throwsException{given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)))|this.mockMvc.perform(get("/api/pets/3").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(3)).andExpect(jsonPath("$.name").value("Rosy"))|};cad4a42b9cb38d9e00e8760645b8c71a;2aa4f46ada1f3590e4a595c94cc181a4
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testGetPetNotFound;118-125;118-125;5ec90bd7491d28784efdf0e7867519bf;356ca395bbeb6559892ce08c39b14d87;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetPetNotFound()throwsException{given(petMapper.toPetDto(this.clinicService.findPetById(-1))).willReturn(null)|this.mockMvc.perform(get("/api/pets/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};193185d2c497e35a47e0c72f7d2086bf;c7347e7616f2d27ed06a921a28cf4542
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testGetAllPetsSuccess;127-142;127-142;71a8f63f800ded358ab6c803cc476ecd;a33dc438d67fc95a68e25e0b0f37765b;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllPetsSuccess()throwsException{finalCollection<Pet>pets=petMapper.toPets(this.pets)|System.err.println(pets)|when(this.clinicService.findAllPets()).thenReturn(pets)|//given(this.clinicService.findAllPets()).willReturn(petMapper.toPets(pets))|this.mockMvc.perform(get("/api/pets/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(3)).andExpect(jsonPath("$.[0].name").value("Rosy")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].name").value("Jewel"))|};4e5d65b3d18ac94e48ed07d77f4b7e27;725aeb54db7ea066ac99ab179450b013
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testGetAllPetsNotFound;144-152;144-152;b6105600a36147224b9d6834ce24c26b;cdd9d9d4cbfe6fbd553c5a0d2642327d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllPetsNotFound()throwsException{pets.clear()|given(this.clinicService.findAllPets()).willReturn(petMapper.toPets(pets))|this.mockMvc.perform(get("/api/pets/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};35d5100b0c5c3d47b926ce657183b063;289c4feb539bf9fd6801c3d14781bcb3
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testUpdatePetSuccess;154-178;154-178;bea0e524f1502c821b06f10752b75ff0;e1cefca91c13b3b2dd83574412d3332e;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdatePetSuccess()throwsException{given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)))|PetDtonewPet=pets.get(0)|newPet.setName("RosyI")|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.setDateFormat(newSimpleDateFormat("yyyy-MM-dd"))|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|this.mockMvc.perform(put("/api/pets/3").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/pets/3").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(3)).andExpect(jsonPath("$.name").value("RosyI"))|};af8b55f7621523ab866c2f00b0fae537;ace4741b8e735fddb15bc3da7c77c8ba
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testUpdatePetError;180-194;180-194;91ca2f76ee21fb42ee6ee399c024b551;39de8b2e0da215eef6ca92962a207a7d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdatePetError()throwsException{PetDtonewPet=pets.get(0)|newPet.setName(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.setDateFormat(newSimpleDateFormat("yyyy-MM-dd"))|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|this.mockMvc.perform(put("/api/pets/3").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};120114cbd750a77c186ac5ffcb23e891;4c4edd6e910152606e15555da2fb30ee
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testDeletePetSuccess;196-207;196-207;b0cf30e9aa542cb72d92a4591f2cf099;6aa011127bd26904b108500595239270;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeletePetSuccess()throwsException{PetDtonewPet=pets.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)))|this.mockMvc.perform(delete("/api/pets/3").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};78bcef626c55af806ba54a6335cbb53a;d34054616a20063565873b03098d1efa
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testDeletePetError;209-220;209-220;d4306d3bfd596a1f3ea1578e6d4491d5;4809d7a7ad8b197c207e4e1b0851b2f0;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeletePetError()throwsException{PetDtonewPet=pets.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|given(this.clinicService.findPetById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/pets/999").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};6790f62dff2a59361e0b17f65dc1954d;4f95da39d1297856dd27545b8af71075
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testAddPetSuccess;222-233;222-233;7e8b8de4aef35a34d84e3aa2f306bd15;baa567d07e370f1c0f2a68d3a581b21d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestAddPetSuccess()throwsException{PetDtonewPet=pets.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)))|this.mockMvc.perform(post("/api/pets").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk())|};41f02ba8bd5093b940e66082d71bafa3;a2f628ffd651f8e6961030b6c97ede00
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;Unknown Test;testAddPetError;235-247;235-247;4c9b4e824024b1870e7362bace60ffa8;d5796dd3c1311d3398c308cbbd8da4e5;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestAddPetError()throwsException{PetDtonewPet=pets.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|given(this.clinicService.findPetById(999)).willReturn(null)|this.mockMvc.perform(post("/api/pets")//setemptyJSONtoforce400error.content("{}").accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};bf4640b01d70f4656f6d719110c7a170;0b3b71ba142b6ba1ba7b028773feff3e
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testGetPetSuccess;106-116;106-116;0a91e008187aa0f10cbaed2d2a52a3b5;f6088a459e1546304ac9dc53b8e3ff9d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetPetSuccess()throwsException{given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)))|this.mockMvc.perform(get("/api/pets/3").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(3)).andExpect(jsonPath("$.name").value("Rosy"))|};cad4a42b9cb38d9e00e8760645b8c71a;2aa4f46ada1f3590e4a595c94cc181a4
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testGetPetNotFound;118-125;118-125;5ec90bd7491d28784efdf0e7867519bf;356ca395bbeb6559892ce08c39b14d87;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetPetNotFound()throwsException{given(petMapper.toPetDto(this.clinicService.findPetById(-1))).willReturn(null)|this.mockMvc.perform(get("/api/pets/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};193185d2c497e35a47e0c72f7d2086bf;c7347e7616f2d27ed06a921a28cf4542
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testGetAllPetsSuccess;127-142;127-142;71a8f63f800ded358ab6c803cc476ecd;a33dc438d67fc95a68e25e0b0f37765b;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllPetsSuccess()throwsException{finalCollection<Pet>pets=petMapper.toPets(this.pets)|System.err.println(pets)|when(this.clinicService.findAllPets()).thenReturn(pets)|//given(this.clinicService.findAllPets()).willReturn(petMapper.toPets(pets))|this.mockMvc.perform(get("/api/pets/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(3)).andExpect(jsonPath("$.[0].name").value("Rosy")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].name").value("Jewel"))|};4e5d65b3d18ac94e48ed07d77f4b7e27;725aeb54db7ea066ac99ab179450b013
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testGetAllPetsNotFound;144-152;144-152;b6105600a36147224b9d6834ce24c26b;cdd9d9d4cbfe6fbd553c5a0d2642327d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllPetsNotFound()throwsException{pets.clear()|given(this.clinicService.findAllPets()).willReturn(petMapper.toPets(pets))|this.mockMvc.perform(get("/api/pets/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};35d5100b0c5c3d47b926ce657183b063;289c4feb539bf9fd6801c3d14781bcb3
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testUpdatePetSuccess;154-178;154-178;bea0e524f1502c821b06f10752b75ff0;e1cefca91c13b3b2dd83574412d3332e;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdatePetSuccess()throwsException{given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)))|PetDtonewPet=pets.get(0)|newPet.setName("RosyI")|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.setDateFormat(newSimpleDateFormat("yyyy-MM-dd"))|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|this.mockMvc.perform(put("/api/pets/3").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/pets/3").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(3)).andExpect(jsonPath("$.name").value("RosyI"))|};af8b55f7621523ab866c2f00b0fae537;ace4741b8e735fddb15bc3da7c77c8ba
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testUpdatePetError;180-194;180-194;91ca2f76ee21fb42ee6ee399c024b551;39de8b2e0da215eef6ca92962a207a7d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdatePetError()throwsException{PetDtonewPet=pets.get(0)|newPet.setName(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.setDateFormat(newSimpleDateFormat("yyyy-MM-dd"))|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|this.mockMvc.perform(put("/api/pets/3").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};120114cbd750a77c186ac5ffcb23e891;4c4edd6e910152606e15555da2fb30ee
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testDeletePetSuccess;196-207;196-207;b0cf30e9aa542cb72d92a4591f2cf099;6aa011127bd26904b108500595239270;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeletePetSuccess()throwsException{PetDtonewPet=pets.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)))|this.mockMvc.perform(delete("/api/pets/3").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};78bcef626c55af806ba54a6335cbb53a;d34054616a20063565873b03098d1efa
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testDeletePetError;209-220;209-220;d4306d3bfd596a1f3ea1578e6d4491d5;4809d7a7ad8b197c207e4e1b0851b2f0;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeletePetError()throwsException{PetDtonewPet=pets.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|given(this.clinicService.findPetById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/pets/999").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};6790f62dff2a59361e0b17f65dc1954d;4f95da39d1297856dd27545b8af71075
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testAddPetSuccess;222-233;222-233;7e8b8de4aef35a34d84e3aa2f306bd15;baa567d07e370f1c0f2a68d3a581b21d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestAddPetSuccess()throwsException{PetDtonewPet=pets.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)))|this.mockMvc.perform(post("/api/pets").content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk())|};41f02ba8bd5093b940e66082d71bafa3;a2f628ffd651f8e6961030b6c97ede00
qsofttestestest;PetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java;JUnit5;248;16;IgnoredTest;testAddPetError;235-247;235-247;4c9b4e824024b1870e7362bace60ffa8;d5796dd3c1311d3398c308cbbd8da4e5;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestAddPetError()throwsException{PetDtonewPet=pets.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewPetAsJSON=mapper.writeValueAsString(newPet)|given(this.clinicService.findPetById(999)).willReturn(null)|this.mockMvc.perform(post("/api/pets")//setemptyJSONtoforce400error.content("{}").accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};bf4640b01d70f4656f6d719110c7a170;0b3b71ba142b6ba1ba7b028773feff3e
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testGetPetTypeSuccessAsOwnerAdmin;96-106;96-106;6b4f6cbf6e61a802160b628d2c538a05;a3ddbe145fbbd6263bab9445091af554;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetPetTypeSuccessAsOwnerAdmin()throwsException{given(this.clinicService.findPetTypeById(1)).willReturn(petTypes.get(0))|this.mockMvc.perform(get("/api/pettypes/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.name").value("cat"))|};b55774ab3398db6053d5b48d7f1aa488;db2c400c7c5832a7cf9811e4985b62bb
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testGetPetTypeSuccessAsVetAdmin;108-118;108-118;c06d4a3f6b88adb1035633a8956efc70;bba1240145b7106fb81a5a87be0c6c9e;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetPetTypeSuccessAsVetAdmin()throwsException{given(this.clinicService.findPetTypeById(1)).willReturn(petTypes.get(0))|this.mockMvc.perform(get("/api/pettypes/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.name").value("cat"))|};f95e600fd84db8b60b832c1fcece9c0b;0d99844dc72b7fc818382101ee09aa8b
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testGetPetTypeNotFound;120-127;120-127;29feebe3ba830c2cd85b34dd22117be9;59faef6d01a43898abb2668b399c73cb;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetPetTypeNotFound()throwsException{given(this.clinicService.findPetTypeById(999)).willReturn(null)|this.mockMvc.perform(get("/api/pettypes/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};a75e92db3ccfcad93d6fd9c2cc8b95b6;85d085ef5d8ae538e8d83dc1415bdf71
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testGetAllPetTypesSuccessAsOwnerAdmin;129-143;129-143;e234ea125f2fa1169cfa6f4b20bf546d;1d4910ae26e41674f946a755c7cfa640;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllPetTypesSuccessAsOwnerAdmin()throwsException{petTypes.remove(0)|petTypes.remove(1)|given(this.clinicService.findAllPetTypes()).willReturn(petTypes)|this.mockMvc.perform(get("/api/pettypes/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].name").value("dog")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].name").value("snake"))|};82323afb4011cf32b2a21da2ba41051e;43f6407a2375eabc62a877b65fb47746
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testGetAllPetTypesSuccessAsVetAdmin;145-159;145-159;ac9793d0c00ed71f7c4c80656633ed0b;454834ac6da20a647260d7dff80ccdae;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllPetTypesSuccessAsVetAdmin()throwsException{petTypes.remove(0)|petTypes.remove(1)|given(this.clinicService.findAllPetTypes()).willReturn(petTypes)|this.mockMvc.perform(get("/api/pettypes/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].name").value("dog")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].name").value("snake"))|};2817f07d886f065857570e6304d11a7a;a9e2ad12c19fe8efddd4df0a406296a6
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testGetAllPetTypesNotFound;161-169;161-169;32943405f3e490c36a3418cbde1d5942;80c798ebfec4bae1e90fd96c1f71146b;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllPetTypesNotFound()throwsException{petTypes.clear()|given(this.clinicService.findAllPetTypes()).willReturn(petTypes)|this.mockMvc.perform(get("/api/pettypes/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};38749421859f4fb07819946d3e0b983e;5a6b11a2402fc06e7933542655767a06
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testCreatePetTypeSuccess;171-181;171-181;4cea4bca509a0df50d21d27fbfe33cf4;fb29208ac06f2699b2b273ea6a3dce5b;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreatePetTypeSuccess()throwsException{PetTypenewPetType=petTypes.get(0)|newPetType.setId(null)|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeFieldsDto(newPetType))|this.mockMvc.perform(post("/api/pettypes/").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};722084adbe4581585af0338787f1996b;f16b5f463f0c4b92a0dbaaec3e09f6d0
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testCreatePetTypeError;183-194;183-194;68a348fd24ee602bbadb2b36e8c7d757;fafea76479eb31ee1c035179f761b2dc;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreatePetTypeError()throwsException{PetTypenewPetType=petTypes.get(0)|newPetType.setId(null)|newPetType.setName(null)|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType))|this.mockMvc.perform(post("/api/pettypes/").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};af92e31339c56a315b0f986b31047bcc;18a5466496bb8b50a6c59fa19a9b3b38
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testUpdatePetTypeSuccess;196-215;196-215;01b5d9edee3d45d3173e31a619e0308f;90e65793869c5bf0acec247d766a63a0;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdatePetTypeSuccess()throwsException{given(this.clinicService.findPetTypeById(2)).willReturn(petTypes.get(1))|PetTypenewPetType=petTypes.get(1)|newPetType.setName("dogI")|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType))|this.mockMvc.perform(put("/api/pettypes/2").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/pettypes/2").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(2)).andExpect(jsonPath("$.name").value("dogI"))|};d9d60a5030eddd4be14baa878bc6a192;8173976379a458d735cde0522dbe4214
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testUpdatePetTypeError;217-227;217-227;36f8b76e9d327360640ef54b3e1fc793;5604da133c89b234350de7fc5ad54537;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdatePetTypeError()throwsException{PetTypenewPetType=petTypes.get(0)|newPetType.setName("")|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType))|this.mockMvc.perform(put("/api/pettypes/1").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};25d7896b6e6934bbc2c4f91b118c0f46;cd09e1a81eff36ff9ad81a84862022e2
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testDeletePetTypeSuccess;229-239;229-239;5c05bc423237a9eef8ec0b215ca625c8;80743017917a80b78cb35d17c283a88d;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeletePetTypeSuccess()throwsException{PetTypenewPetType=petTypes.get(0)|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(newPetType)|given(this.clinicService.findPetTypeById(1)).willReturn(petTypes.get(0))|this.mockMvc.perform(delete("/api/pettypes/1").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};5f7737e4980d979dac9cc2f256e8d5c1;66f9fa408395f30cc77c204f53cc9414
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;Unknown Test;testDeletePetTypeError;241-251;241-251;c72059ad42ade86d978c2f591278e3e2;856eb8e9b3173ff65152ae37c47f6619;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeletePetTypeError()throwsException{PetTypenewPetType=petTypes.get(0)|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType))|given(this.clinicService.findPetTypeById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/pettypes/999").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};e357815f828eb68c53d6b289c5d747ca;68b7f4d74501c3d2392cfa654e47b3a2
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testGetPetTypeSuccessAsOwnerAdmin;96-106;96-106;6b4f6cbf6e61a802160b628d2c538a05;a3ddbe145fbbd6263bab9445091af554;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetPetTypeSuccessAsOwnerAdmin()throwsException{given(this.clinicService.findPetTypeById(1)).willReturn(petTypes.get(0))|this.mockMvc.perform(get("/api/pettypes/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.name").value("cat"))|};b55774ab3398db6053d5b48d7f1aa488;db2c400c7c5832a7cf9811e4985b62bb
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testGetPetTypeSuccessAsVetAdmin;108-118;108-118;c06d4a3f6b88adb1035633a8956efc70;bba1240145b7106fb81a5a87be0c6c9e;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetPetTypeSuccessAsVetAdmin()throwsException{given(this.clinicService.findPetTypeById(1)).willReturn(petTypes.get(0))|this.mockMvc.perform(get("/api/pettypes/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.name").value("cat"))|};f95e600fd84db8b60b832c1fcece9c0b;0d99844dc72b7fc818382101ee09aa8b
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testGetPetTypeNotFound;120-127;120-127;29feebe3ba830c2cd85b34dd22117be9;59faef6d01a43898abb2668b399c73cb;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetPetTypeNotFound()throwsException{given(this.clinicService.findPetTypeById(999)).willReturn(null)|this.mockMvc.perform(get("/api/pettypes/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};a75e92db3ccfcad93d6fd9c2cc8b95b6;85d085ef5d8ae538e8d83dc1415bdf71
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testGetAllPetTypesSuccessAsOwnerAdmin;129-143;129-143;e234ea125f2fa1169cfa6f4b20bf546d;1d4910ae26e41674f946a755c7cfa640;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllPetTypesSuccessAsOwnerAdmin()throwsException{petTypes.remove(0)|petTypes.remove(1)|given(this.clinicService.findAllPetTypes()).willReturn(petTypes)|this.mockMvc.perform(get("/api/pettypes/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].name").value("dog")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].name").value("snake"))|};82323afb4011cf32b2a21da2ba41051e;43f6407a2375eabc62a877b65fb47746
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testGetAllPetTypesSuccessAsVetAdmin;145-159;145-159;ac9793d0c00ed71f7c4c80656633ed0b;454834ac6da20a647260d7dff80ccdae;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllPetTypesSuccessAsVetAdmin()throwsException{petTypes.remove(0)|petTypes.remove(1)|given(this.clinicService.findAllPetTypes()).willReturn(petTypes)|this.mockMvc.perform(get("/api/pettypes/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].name").value("dog")).andExpect(jsonPath("$.[1].id").value(4)).andExpect(jsonPath("$.[1].name").value("snake"))|};2817f07d886f065857570e6304d11a7a;a9e2ad12c19fe8efddd4df0a406296a6
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testGetAllPetTypesNotFound;161-169;161-169;32943405f3e490c36a3418cbde1d5942;80c798ebfec4bae1e90fd96c1f71146b;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllPetTypesNotFound()throwsException{petTypes.clear()|given(this.clinicService.findAllPetTypes()).willReturn(petTypes)|this.mockMvc.perform(get("/api/pettypes/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};38749421859f4fb07819946d3e0b983e;5a6b11a2402fc06e7933542655767a06
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testCreatePetTypeSuccess;171-181;171-181;4cea4bca509a0df50d21d27fbfe33cf4;fb29208ac06f2699b2b273ea6a3dce5b;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreatePetTypeSuccess()throwsException{PetTypenewPetType=petTypes.get(0)|newPetType.setId(null)|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeFieldsDto(newPetType))|this.mockMvc.perform(post("/api/pettypes/").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};722084adbe4581585af0338787f1996b;f16b5f463f0c4b92a0dbaaec3e09f6d0
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testCreatePetTypeError;183-194;183-194;68a348fd24ee602bbadb2b36e8c7d757;fafea76479eb31ee1c035179f761b2dc;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreatePetTypeError()throwsException{PetTypenewPetType=petTypes.get(0)|newPetType.setId(null)|newPetType.setName(null)|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType))|this.mockMvc.perform(post("/api/pettypes/").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};af92e31339c56a315b0f986b31047bcc;18a5466496bb8b50a6c59fa19a9b3b38
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testUpdatePetTypeSuccess;196-215;196-215;01b5d9edee3d45d3173e31a619e0308f;90e65793869c5bf0acec247d766a63a0;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdatePetTypeSuccess()throwsException{given(this.clinicService.findPetTypeById(2)).willReturn(petTypes.get(1))|PetTypenewPetType=petTypes.get(1)|newPetType.setName("dogI")|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType))|this.mockMvc.perform(put("/api/pettypes/2").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/pettypes/2").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(2)).andExpect(jsonPath("$.name").value("dogI"))|};d9d60a5030eddd4be14baa878bc6a192;8173976379a458d735cde0522dbe4214
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testUpdatePetTypeError;217-227;217-227;36f8b76e9d327360640ef54b3e1fc793;5604da133c89b234350de7fc5ad54537;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdatePetTypeError()throwsException{PetTypenewPetType=petTypes.get(0)|newPetType.setName("")|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType))|this.mockMvc.perform(put("/api/pettypes/1").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};25d7896b6e6934bbc2c4f91b118c0f46;cd09e1a81eff36ff9ad81a84862022e2
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testDeletePetTypeSuccess;229-239;229-239;5c05bc423237a9eef8ec0b215ca625c8;80743017917a80b78cb35d17c283a88d;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeletePetTypeSuccess()throwsException{PetTypenewPetType=petTypes.get(0)|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(newPetType)|given(this.clinicService.findPetTypeById(1)).willReturn(petTypes.get(0))|this.mockMvc.perform(delete("/api/pettypes/1").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};5f7737e4980d979dac9cc2f256e8d5c1;66f9fa408395f30cc77c204f53cc9414
qsofttestestest;PetTypeRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java;JUnit5;253;18;IgnoredTest;testDeletePetTypeError;241-251;241-251;c72059ad42ade86d978c2f591278e3e2;856eb8e9b3173ff65152ae37c47f6619;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeletePetTypeError()throwsException{PetTypenewPetType=petTypes.get(0)|ObjectMappermapper=newObjectMapper()|StringnewPetTypeAsJSON=mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType))|given(this.clinicService.findPetTypeById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/pettypes/999").content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};e357815f828eb68c53d6b289c5d747ca;68b7f4d74501c3d2392cfa654e47b3a2
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testGetSpecialtySuccess;92-102;92-102;8d893cce89a4bbe66fb9bb8ee39bfb59;09bdf8ebedd04c3fe51b12bf13e4e297;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetSpecialtySuccess()throwsException{given(this.clinicService.findSpecialtyById(1)).willReturn(specialties.get(0))|this.mockMvc.perform(get("/api/specialties/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.name").value("radiology"))|};6f17bde7967376a42a2e841c8b16e675;8b10687c4cf58fcba0665c44e97f2af1
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testGetSpecialtyNotFound;104-111;104-111;4fd1c3c9a39bf9f65de0e0e35e34a9ea;122b18fd12a525d5546ffc64994b8360;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetSpecialtyNotFound()throwsException{given(this.clinicService.findSpecialtyById(999)).willReturn(null)|this.mockMvc.perform(get("/api/specialties/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};90ff6cbdbcf1f0facc792b60050f8bb8;2f8e037d7a34d6954a0337b6c6f7df4b
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testGetAllSpecialtysSuccess;113-126;113-126;859abd1ade8f92f9d07af2cb5a3cce8c;6ddc8a1e5b16c1c3db68cd9c505aa172;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllSpecialtysSuccess()throwsException{specialties.remove(0)|given(this.clinicService.findAllSpecialties()).willReturn(specialties)|this.mockMvc.perform(get("/api/specialties/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].name").value("surgery")).andExpect(jsonPath("$.[1].id").value(3)).andExpect(jsonPath("$.[1].name").value("dentistry"))|};6a7c34b0ad4c518f3a4ca677a5a250b0;a7d6b88e53307bb712dd8cd761a68923
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testGetAllSpecialtysNotFound;128-136;128-136;3882d8d2649e8f96f636dfbba8be691f;6d3ccd78463e9bb4556d3c033f2339c1;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllSpecialtysNotFound()throwsException{specialties.clear()|given(this.clinicService.findAllSpecialties()).willReturn(specialties)|this.mockMvc.perform(get("/api/specialties/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};eecfff03fee80edd3953d261facb9209;f2a70e517aa2c135ee4fb9afe8c62063
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testCreateSpecialtySuccess;138-148;138-148;a0254982faa3b8bca2e8c157f8dcca44;a5ff60b450bd93feeb00ea9a2f230eb0;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreateSpecialtySuccess()throwsException{SpecialtynewSpecialty=specialties.get(0)|newSpecialty.setId(999)|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|this.mockMvc.perform(post("/api/specialties/").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};b427d8c0ac1b176217a11cc07561074a;0c2a2779d2813537d2e9126a851c45e1
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testCreateSpecialtyError;150-161;150-161;28e8727b59eedbdbcff6d7a808b61933;813ca52f1e882884cd9f169c9a9cf92e;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreateSpecialtyError()throwsException{SpecialtynewSpecialty=specialties.get(0)|newSpecialty.setId(null)|newSpecialty.setName(null)|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|this.mockMvc.perform(post("/api/specialties/").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};0317a5eba5d65d888305a54f05eaab52;9eba0bc1a1f20833d4b17df4165d85cb
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testUpdateSpecialtySuccess;163-182;163-182;689c541bc358e859f02dc2555e666298;9d8de24b103c62b7aabf30a3a5d03560;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdateSpecialtySuccess()throwsException{given(this.clinicService.findSpecialtyById(2)).willReturn(specialties.get(1))|SpecialtynewSpecialty=specialties.get(1)|newSpecialty.setName("surgeryI")|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|this.mockMvc.perform(put("/api/specialties/2").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/specialties/2").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(2)).andExpect(jsonPath("$.name").value("surgeryI"))|};5e50473cad42d1ec4d845e019c8ce03b;8c101c16b5b572c4b92fd3bcc6383aed
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testUpdateSpecialtyError;184-194;184-194;bd9d33529bda38942830ebb150e6c313;f76b599d8d4b8b8d25ae4de0c93e0f6c;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdateSpecialtyError()throwsException{SpecialtynewSpecialty=specialties.get(0)|newSpecialty.setName("")|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|this.mockMvc.perform(put("/api/specialties/1").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};583c7a3c47911d7f2afd75e138d647cf;96d7fa1ff160f0f30169257c2d55f2a5
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testDeleteSpecialtySuccess;196-206;196-206;e70e6e22d57a51066ed6f21e363ec6cb;feb052b6b14e1abfe59560ed00be8891;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeleteSpecialtySuccess()throwsException{SpecialtynewSpecialty=specialties.get(0)|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|given(this.clinicService.findSpecialtyById(1)).willReturn(specialties.get(0))|this.mockMvc.perform(delete("/api/specialties/1").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};7d66470fa3596dc58f8bee94885d3014;71f3fba20f1492547c68417e930f59c5
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;Unknown Test;testDeleteSpecialtyError;208-218;208-218;c600142777226a3ea13ddf772108e76b;6ed099014b409576b7ef0351e0454371;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeleteSpecialtyError()throwsException{SpecialtynewSpecialty=specialties.get(0)|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|given(this.clinicService.findSpecialtyById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/specialties/999").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};d4dd6a4d5a5a3eec175c930dada2d969;4ab5cc9c39c4cb7a891da11c1daf3113
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testGetSpecialtySuccess;92-102;92-102;8d893cce89a4bbe66fb9bb8ee39bfb59;09bdf8ebedd04c3fe51b12bf13e4e297;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetSpecialtySuccess()throwsException{given(this.clinicService.findSpecialtyById(1)).willReturn(specialties.get(0))|this.mockMvc.perform(get("/api/specialties/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.name").value("radiology"))|};6f17bde7967376a42a2e841c8b16e675;8b10687c4cf58fcba0665c44e97f2af1
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testGetSpecialtyNotFound;104-111;104-111;4fd1c3c9a39bf9f65de0e0e35e34a9ea;122b18fd12a525d5546ffc64994b8360;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetSpecialtyNotFound()throwsException{given(this.clinicService.findSpecialtyById(999)).willReturn(null)|this.mockMvc.perform(get("/api/specialties/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};90ff6cbdbcf1f0facc792b60050f8bb8;2f8e037d7a34d6954a0337b6c6f7df4b
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testGetAllSpecialtysSuccess;113-126;113-126;859abd1ade8f92f9d07af2cb5a3cce8c;6ddc8a1e5b16c1c3db68cd9c505aa172;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllSpecialtysSuccess()throwsException{specialties.remove(0)|given(this.clinicService.findAllSpecialties()).willReturn(specialties)|this.mockMvc.perform(get("/api/specialties/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].name").value("surgery")).andExpect(jsonPath("$.[1].id").value(3)).andExpect(jsonPath("$.[1].name").value("dentistry"))|};6a7c34b0ad4c518f3a4ca677a5a250b0;a7d6b88e53307bb712dd8cd761a68923
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testGetAllSpecialtysNotFound;128-136;128-136;3882d8d2649e8f96f636dfbba8be691f;6d3ccd78463e9bb4556d3c033f2339c1;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllSpecialtysNotFound()throwsException{specialties.clear()|given(this.clinicService.findAllSpecialties()).willReturn(specialties)|this.mockMvc.perform(get("/api/specialties/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};eecfff03fee80edd3953d261facb9209;f2a70e517aa2c135ee4fb9afe8c62063
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testCreateSpecialtySuccess;138-148;138-148;a0254982faa3b8bca2e8c157f8dcca44;a5ff60b450bd93feeb00ea9a2f230eb0;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreateSpecialtySuccess()throwsException{SpecialtynewSpecialty=specialties.get(0)|newSpecialty.setId(999)|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|this.mockMvc.perform(post("/api/specialties/").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};b427d8c0ac1b176217a11cc07561074a;0c2a2779d2813537d2e9126a851c45e1
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testCreateSpecialtyError;150-161;150-161;28e8727b59eedbdbcff6d7a808b61933;813ca52f1e882884cd9f169c9a9cf92e;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreateSpecialtyError()throwsException{SpecialtynewSpecialty=specialties.get(0)|newSpecialty.setId(null)|newSpecialty.setName(null)|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|this.mockMvc.perform(post("/api/specialties/").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};0317a5eba5d65d888305a54f05eaab52;9eba0bc1a1f20833d4b17df4165d85cb
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testUpdateSpecialtySuccess;163-182;163-182;689c541bc358e859f02dc2555e666298;9d8de24b103c62b7aabf30a3a5d03560;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdateSpecialtySuccess()throwsException{given(this.clinicService.findSpecialtyById(2)).willReturn(specialties.get(1))|SpecialtynewSpecialty=specialties.get(1)|newSpecialty.setName("surgeryI")|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|this.mockMvc.perform(put("/api/specialties/2").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/specialties/2").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(2)).andExpect(jsonPath("$.name").value("surgeryI"))|};5e50473cad42d1ec4d845e019c8ce03b;8c101c16b5b572c4b92fd3bcc6383aed
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testUpdateSpecialtyError;184-194;184-194;bd9d33529bda38942830ebb150e6c313;f76b599d8d4b8b8d25ae4de0c93e0f6c;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdateSpecialtyError()throwsException{SpecialtynewSpecialty=specialties.get(0)|newSpecialty.setName("")|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|this.mockMvc.perform(put("/api/specialties/1").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};583c7a3c47911d7f2afd75e138d647cf;96d7fa1ff160f0f30169257c2d55f2a5
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testDeleteSpecialtySuccess;196-206;196-206;e70e6e22d57a51066ed6f21e363ec6cb;feb052b6b14e1abfe59560ed00be8891;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeleteSpecialtySuccess()throwsException{SpecialtynewSpecialty=specialties.get(0)|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|given(this.clinicService.findSpecialtyById(1)).willReturn(specialties.get(0))|this.mockMvc.perform(delete("/api/specialties/1").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};7d66470fa3596dc58f8bee94885d3014;71f3fba20f1492547c68417e930f59c5
qsofttestestest;SpecialtyRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java;JUnit5;219;16;IgnoredTest;testDeleteSpecialtyError;208-218;208-218;c600142777226a3ea13ddf772108e76b;6ed099014b409576b7ef0351e0454371;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeleteSpecialtyError()throwsException{SpecialtynewSpecialty=specialties.get(0)|ObjectMappermapper=newObjectMapper()|StringnewSpecialtyAsJSON=mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty))|given(this.clinicService.findSpecialtyById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/specialties/999").content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};d4dd6a4d5a5a3eec175c930dada2d969;4ab5cc9c39c4cb7a891da11c1daf3113
qsofttestestest;UserRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\UserRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\UserRestController.java;JUnit5;75;7;Unknown Test;testCreateUserSuccess;47-60;47-60;e72443a9cacfbc7b7dfdd4d2f28a07b1;56b5319d3d2de567a1f383bde74e6809;@Test@WithMockUser(roles="ADMIN")voidtestCreateUserSuccess()throwsException{Useruser=newUser()|user.setUsername("username")|user.setPassword("password")|user.setEnabled(true)|user.addRole("OWNER_ADMIN")|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(userMapper.toUserDto(user))|this.mockMvc.perform(post("/api/users/").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};8c8c2e2c393ae3e07a6c0bfb19bd5971;f5701770b70590a46836e0de08bb9273
qsofttestestest;UserRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\UserRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\UserRestController.java;JUnit5;75;7;Unknown Test;testCreateUserError;62-74;62-74;ffbb57e033ea1a75d6deb4cc9db49083;16d8cafa08784b3ad206a7aec585a33a;@Test@WithMockUser(roles="ADMIN")voidtestCreateUserError()throwsException{Useruser=newUser()|user.setUsername("")|//setemptyusernametoforce400erroruser.setPassword("password")|user.setEnabled(true)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(userMapper.toUserDto(user))|this.mockMvc.perform(post("/api/users/").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};43941fdf041a11e02ac52be7da6b9ce3;85b079991516907f8cad87ed5573dd5c
qsofttestestest;UserRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\UserRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\UserRestController.java;JUnit5;75;7;IgnoredTest;testCreateUserSuccess;47-60;47-60;e72443a9cacfbc7b7dfdd4d2f28a07b1;56b5319d3d2de567a1f383bde74e6809;@Test@WithMockUser(roles="ADMIN")voidtestCreateUserSuccess()throwsException{Useruser=newUser()|user.setUsername("username")|user.setPassword("password")|user.setEnabled(true)|user.addRole("OWNER_ADMIN")|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(userMapper.toUserDto(user))|this.mockMvc.perform(post("/api/users/").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};8c8c2e2c393ae3e07a6c0bfb19bd5971;f5701770b70590a46836e0de08bb9273
qsofttestestest;UserRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\UserRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\UserRestController.java;JUnit5;75;7;IgnoredTest;testCreateUserError;62-74;62-74;ffbb57e033ea1a75d6deb4cc9db49083;16d8cafa08784b3ad206a7aec585a33a;@Test@WithMockUser(roles="ADMIN")voidtestCreateUserError()throwsException{Useruser=newUser()|user.setUsername("")|//setemptyusernametoforce400erroruser.setPassword("password")|user.setEnabled(true)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(userMapper.toUserDto(user))|this.mockMvc.perform(post("/api/users/").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};43941fdf041a11e02ac52be7da6b9ce3;85b079991516907f8cad87ed5573dd5c
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testGetVetSuccess;95-105;95-105;0dfc676d415d0040d68c2515435eef57;bbd9b090ef52a6c59d0a47ccc3c61290;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetVetSuccess()throwsException{given(this.clinicService.findVetById(1)).willReturn(vets.get(0))|this.mockMvc.perform(get("/api/vets/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.firstName").value("James"))|};274890c0e1dc692d2b1a6d3c63a564d3;478ed0df2d6b7f9c770ca7c65545fb77
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testGetVetNotFound;107-114;107-114;c1bcafeedd83eb66b360458b68499435;95df78a59852cfd63aed3e273d025628;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetVetNotFound()throwsException{given(this.clinicService.findVetById(-1)).willReturn(null)|this.mockMvc.perform(get("/api/vets/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};b718b628da1d39a0ed0e03300576f58c;eec402e6efc39ff238cc12006bc7540d
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testGetAllVetsSuccess;116-128;116-128;5ecbf7344da069f31e1f2b2fd28175f7;891e79e6d33d5effc0c6668d0285dbcd;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllVetsSuccess()throwsException{given(this.clinicService.findAllVets()).willReturn(vets)|this.mockMvc.perform(get("/api/vets/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(1)).andExpect(jsonPath("$.[0].firstName").value("James")).andExpect(jsonPath("$.[1].id").value(2)).andExpect(jsonPath("$.[1].firstName").value("Helen"))|};558f1e1af3b1f6bf176fb016c3323e48;5614d5e47b52f30e4db643be342f7628
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testGetAllVetsNotFound;130-138;130-138;9c75251cebdbb42fe363db89842a0c1d;e5424300f957a84c3fc23bb83112e9ab;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllVetsNotFound()throwsException{vets.clear()|given(this.clinicService.findAllVets()).willReturn(vets)|this.mockMvc.perform(get("/api/vets/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};ea312ee4c49bca45449f8fe189e04372;790ff686faaab3c1c60706c742fdd77c
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testCreateVetSuccess;140-150;140-150;88cf4be24b5c2f13c494dd7644f7b8ba;d96c451a899fd40ecbb92e7e313beeed;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreateVetSuccess()throwsException{VetnewVet=vets.get(0)|newVet.setId(999)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|this.mockMvc.perform(post("/api/vets/").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};484daa422befa65c5e2f3f0a10c0f27e;64b1f8985609de58753033dd633e133d
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testCreateVetError;152-163;152-163;4c34629873c319cc16453275d03be04c;99895c759bb8270ba1a4c0ad5506777b;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreateVetError()throwsException{VetnewVet=vets.get(0)|newVet.setId(null)|newVet.setFirstName(null)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|this.mockMvc.perform(post("/api/vets/").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};1c2cc603d0b74b133323dda3b76f7af7;771b558c069df2d7e30454e01392ac44
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testUpdateVetSuccess;165-185;165-185;911c7d8bbbed888b49a6d6e06eee2eb8;2fc0d4dbc1c981f1dd0a730aae237395;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdateVetSuccess()throwsException{given(this.clinicService.findVetById(1)).willReturn(vets.get(0))|VetnewVet=vets.get(0)|newVet.setFirstName("James")|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|this.mockMvc.perform(put("/api/vets/1").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/vets/1").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.firstName").value("James"))|};50df408160d72dd748e197fd8be80a4c;0f897062156590b2d68f9006c51bf078
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testUpdateVetError;187-197;187-197;943a6add6576b9970e190d7328872f0c;b69ac41c33687b8c15f5bbe5ec0a98ee;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdateVetError()throwsException{VetnewVet=vets.get(0)|newVet.setFirstName(null)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|this.mockMvc.perform(put("/api/vets/1").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};b41e2ddd5dc53c6346b0d4eaa88bb501;65efee328690cd158c29dcdb5c99cb04
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testDeleteVetSuccess;199-209;199-209;4fae249900041b559768b58fba000765;364af5520bf5eec533d8b47e236a0800;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeleteVetSuccess()throwsException{VetnewVet=vets.get(0)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|given(this.clinicService.findVetById(1)).willReturn(vets.get(0))|this.mockMvc.perform(delete("/api/vets/1").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};a8d6fc2b8089d92fc4841cc909dc1b4d;e24193256ad87153f6a5df64d389ba19
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;Unknown Test;testDeleteVetError;211-221;211-221;3408643627ca5ceb53b05782afece9c0;116d60f30fe4cb7dde23e20db2507797;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeleteVetError()throwsException{VetnewVet=vets.get(0)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|given(this.clinicService.findVetById(-1)).willReturn(null)|this.mockMvc.perform(delete("/api/vets/999").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};9dcc5b7a03fb56a47f82c7350465150b;b5bd92ae84dec446119dfc83f7884695
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testGetVetSuccess;95-105;95-105;0dfc676d415d0040d68c2515435eef57;bbd9b090ef52a6c59d0a47ccc3c61290;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetVetSuccess()throwsException{given(this.clinicService.findVetById(1)).willReturn(vets.get(0))|this.mockMvc.perform(get("/api/vets/1").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.firstName").value("James"))|};274890c0e1dc692d2b1a6d3c63a564d3;478ed0df2d6b7f9c770ca7c65545fb77
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testGetVetNotFound;107-114;107-114;c1bcafeedd83eb66b360458b68499435;95df78a59852cfd63aed3e273d025628;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetVetNotFound()throwsException{given(this.clinicService.findVetById(-1)).willReturn(null)|this.mockMvc.perform(get("/api/vets/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};b718b628da1d39a0ed0e03300576f58c;eec402e6efc39ff238cc12006bc7540d
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testGetAllVetsSuccess;116-128;116-128;5ecbf7344da069f31e1f2b2fd28175f7;891e79e6d33d5effc0c6668d0285dbcd;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllVetsSuccess()throwsException{given(this.clinicService.findAllVets()).willReturn(vets)|this.mockMvc.perform(get("/api/vets/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(1)).andExpect(jsonPath("$.[0].firstName").value("James")).andExpect(jsonPath("$.[1].id").value(2)).andExpect(jsonPath("$.[1].firstName").value("Helen"))|};558f1e1af3b1f6bf176fb016c3323e48;5614d5e47b52f30e4db643be342f7628
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testGetAllVetsNotFound;130-138;130-138;9c75251cebdbb42fe363db89842a0c1d;e5424300f957a84c3fc23bb83112e9ab;@Test@WithMockUser(roles="VET_ADMIN")voidtestGetAllVetsNotFound()throwsException{vets.clear()|given(this.clinicService.findAllVets()).willReturn(vets)|this.mockMvc.perform(get("/api/vets/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};ea312ee4c49bca45449f8fe189e04372;790ff686faaab3c1c60706c742fdd77c
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testCreateVetSuccess;140-150;140-150;88cf4be24b5c2f13c494dd7644f7b8ba;d96c451a899fd40ecbb92e7e313beeed;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreateVetSuccess()throwsException{VetnewVet=vets.get(0)|newVet.setId(999)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|this.mockMvc.perform(post("/api/vets/").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};484daa422befa65c5e2f3f0a10c0f27e;64b1f8985609de58753033dd633e133d
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testCreateVetError;152-163;152-163;4c34629873c319cc16453275d03be04c;99895c759bb8270ba1a4c0ad5506777b;@Test@WithMockUser(roles="VET_ADMIN")voidtestCreateVetError()throwsException{VetnewVet=vets.get(0)|newVet.setId(null)|newVet.setFirstName(null)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|this.mockMvc.perform(post("/api/vets/").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};1c2cc603d0b74b133323dda3b76f7af7;771b558c069df2d7e30454e01392ac44
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testUpdateVetSuccess;165-185;165-185;911c7d8bbbed888b49a6d6e06eee2eb8;2fc0d4dbc1c981f1dd0a730aae237395;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdateVetSuccess()throwsException{given(this.clinicService.findVetById(1)).willReturn(vets.get(0))|VetnewVet=vets.get(0)|newVet.setFirstName("James")|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|this.mockMvc.perform(put("/api/vets/1").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/vets/1").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(1)).andExpect(jsonPath("$.firstName").value("James"))|};50df408160d72dd748e197fd8be80a4c;0f897062156590b2d68f9006c51bf078
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testUpdateVetError;187-197;187-197;943a6add6576b9970e190d7328872f0c;b69ac41c33687b8c15f5bbe5ec0a98ee;@Test@WithMockUser(roles="VET_ADMIN")voidtestUpdateVetError()throwsException{VetnewVet=vets.get(0)|newVet.setFirstName(null)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|this.mockMvc.perform(put("/api/vets/1").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};b41e2ddd5dc53c6346b0d4eaa88bb501;65efee328690cd158c29dcdb5c99cb04
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testDeleteVetSuccess;199-209;199-209;4fae249900041b559768b58fba000765;364af5520bf5eec533d8b47e236a0800;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeleteVetSuccess()throwsException{VetnewVet=vets.get(0)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|given(this.clinicService.findVetById(1)).willReturn(vets.get(0))|this.mockMvc.perform(delete("/api/vets/1").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};a8d6fc2b8089d92fc4841cc909dc1b4d;e24193256ad87153f6a5df64d389ba19
qsofttestestest;VetRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java;JUnit5;223;16;IgnoredTest;testDeleteVetError;211-221;211-221;3408643627ca5ceb53b05782afece9c0;116d60f30fe4cb7dde23e20db2507797;@Test@WithMockUser(roles="VET_ADMIN")voidtestDeleteVetError()throwsException{VetnewVet=vets.get(0)|ObjectMappermapper=newObjectMapper()|StringnewVetAsJSON=mapper.writeValueAsString(vetMapper.toVetDto(newVet))|given(this.clinicService.findVetById(-1)).willReturn(null)|this.mockMvc.perform(delete("/api/vets/999").content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};9dcc5b7a03fb56a47f82c7350465150b;b5bd92ae84dec446119dfc83f7884695
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testGetVisitSuccess;118-128;118-128;236688c78e6014219c44a5ca750248c5;0cbaada963af7c11a883aea3d28f1a35;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetVisitSuccess()throwsException{given(this.clinicService.findVisitById(2)).willReturn(visits.get(0))|this.mockMvc.perform(get("/api/visits/2").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(2)).andExpect(jsonPath("$.description").value("rabiesshot"))|};45fad7320db4d73d03466d6296d256e9;3f1309344565c1064fd7771c19a8727f
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testGetVisitNotFound;130-137;130-137;b8f6f6808d38a2a01c6bbedbf0bb4170;2285ad6bfe12840432566e2e1a4c1369;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetVisitNotFound()throwsException{given(this.clinicService.findVisitById(999)).willReturn(null)|this.mockMvc.perform(get("/api/visits/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};6e394f9c4060e8e33a6e59a56ac514a2;df1dfa4e942de857db73a34e0dba112c
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testGetAllVisitsSuccess;139-151;139-151;b211f39784ff604f30c2cc07b1a93def;2ace74f514ea1cfa8f14371e512e5aff;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllVisitsSuccess()throwsException{given(this.clinicService.findAllVisits()).willReturn(visits)|this.mockMvc.perform(get("/api/visits/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].description").value("rabiesshot")).andExpect(jsonPath("$.[1].id").value(3)).andExpect(jsonPath("$.[1].description").value("neutered"))|};7aca3d044ec4f787d0c8b7ef1f7df411;046e6223a64c6805bbbc99109ccb2f51
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testGetAllVisitsNotFound;153-161;153-161;7868fdc8a3bc1a8cbe1e600992db6990;3f36370be38cc7243e7531fd01eb65d6;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllVisitsNotFound()throwsException{visits.clear()|given(this.clinicService.findAllVisits()).willReturn(visits)|this.mockMvc.perform(get("/api/visits/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};d5052ca7d18583833fd35c942724d98b;792302e9bd14e05d2bd310d2cf3d41c2
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testCreateVisitSuccess;163-176;163-176;b0af7ff5a350a288c0d7163d3abdd99c;981cbb9fc0be6de2adbe1d0fd6003c4f;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateVisitSuccess()throwsException{VisitnewVisit=visits.get(0)|newVisit.setId(999)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|System.out.println("newVisitAsJSON"+newVisitAsJSON)|this.mockMvc.perform(post("/api/visits/").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};127ffa85157d9e63465087c9e08b99ac;6afb195553ac643423fdb44c4e05f31e
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testCreateVisitError;178-190;178-190;e5534fb75d850c4545163663e23717c4;ce956057422ea3817490b5e9d76ab48a;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateVisitError()throwsException{VisitnewVisit=visits.get(0)|newVisit.setId(null)|newVisit.setDescription(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|this.mockMvc.perform(post("/api/visits/").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};02beb8407dd0fd59149b0f0b56c44404;1a52d4cfced141e904be0824af1cba41
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testUpdateVisitSuccess;192-213;192-213;d4881c594ef9eaeb7401c50ee0e97695;9401e48bd5b31d6f3bf7582951aabc07;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateVisitSuccess()throwsException{given(this.clinicService.findVisitById(2)).willReturn(visits.get(0))|VisitnewVisit=visits.get(0)|newVisit.setDescription("rabiesshottest")|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|this.mockMvc.perform(put("/api/visits/2").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/visits/2").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(2)).andExpect(jsonPath("$.description").value("rabiesshottest"))|};ca3119297e1ea6cf2c8162baf07f43d4;c6732797d37527e24e7ba087d418669e
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testUpdateVisitError;215-226;215-226;a33ce9182b89a5d0bfdf2017e3ba3353;82dbf627ed4e31f671176018e6b67217;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateVisitError()throwsException{VisitnewVisit=visits.get(0)|newVisit.setDescription(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|this.mockMvc.perform(put("/api/visits/2").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};010919c53703cbe5c94ad5c1585dd360;ea29a2be363770761afacc13b34d810d
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testDeleteVisitSuccess;228-239;228-239;ee4cb5fd78e927a8acc6908b7ea613d0;744da065971dac1d2dcdd764bfbfd10d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeleteVisitSuccess()throwsException{VisitnewVisit=visits.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|given(this.clinicService.findVisitById(2)).willReturn(visits.get(0))|this.mockMvc.perform(delete("/api/visits/2").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};660e4e9a86c2410878a274de93dbb7a1;09fb1c213f5c24527e0ded9104003e97
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Unknown Test;testDeleteVisitError;241-252;241-252;289674d145d788b5ec0e6fcbc883c5a4;ec5fb38eae962ca15ff06ff8f9d85483;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeleteVisitError()throwsException{VisitnewVisit=visits.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|given(this.clinicService.findVisitById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/visits/999").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};b3a84c4c334039c115a9b0b9789b91e1;1b8e4ad40e1e8c733f9ba3d447bef15f
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testGetVisitSuccess;118-128;118-128;236688c78e6014219c44a5ca750248c5;0cbaada963af7c11a883aea3d28f1a35;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetVisitSuccess()throwsException{given(this.clinicService.findVisitById(2)).willReturn(visits.get(0))|this.mockMvc.perform(get("/api/visits/2").accept(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(2)).andExpect(jsonPath("$.description").value("rabiesshot"))|};45fad7320db4d73d03466d6296d256e9;3f1309344565c1064fd7771c19a8727f
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testGetVisitNotFound;130-137;130-137;b8f6f6808d38a2a01c6bbedbf0bb4170;2285ad6bfe12840432566e2e1a4c1369;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetVisitNotFound()throwsException{given(this.clinicService.findVisitById(999)).willReturn(null)|this.mockMvc.perform(get("/api/visits/999").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};6e394f9c4060e8e33a6e59a56ac514a2;df1dfa4e942de857db73a34e0dba112c
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testGetAllVisitsSuccess;139-151;139-151;b211f39784ff604f30c2cc07b1a93def;2ace74f514ea1cfa8f14371e512e5aff;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllVisitsSuccess()throwsException{given(this.clinicService.findAllVisits()).willReturn(visits)|this.mockMvc.perform(get("/api/visits/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.[0].id").value(2)).andExpect(jsonPath("$.[0].description").value("rabiesshot")).andExpect(jsonPath("$.[1].id").value(3)).andExpect(jsonPath("$.[1].description").value("neutered"))|};7aca3d044ec4f787d0c8b7ef1f7df411;046e6223a64c6805bbbc99109ccb2f51
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testGetAllVisitsNotFound;153-161;153-161;7868fdc8a3bc1a8cbe1e600992db6990;3f36370be38cc7243e7531fd01eb65d6;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestGetAllVisitsNotFound()throwsException{visits.clear()|given(this.clinicService.findAllVisits()).willReturn(visits)|this.mockMvc.perform(get("/api/visits/").accept(MediaType.APPLICATION_JSON)).andExpect(status().isNotFound())|};d5052ca7d18583833fd35c942724d98b;792302e9bd14e05d2bd310d2cf3d41c2
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testCreateVisitSuccess;163-176;163-176;b0af7ff5a350a288c0d7163d3abdd99c;981cbb9fc0be6de2adbe1d0fd6003c4f;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateVisitSuccess()throwsException{VisitnewVisit=visits.get(0)|newVisit.setId(999)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|System.out.println("newVisitAsJSON"+newVisitAsJSON)|this.mockMvc.perform(post("/api/visits/").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isCreated())|};127ffa85157d9e63465087c9e08b99ac;6afb195553ac643423fdb44c4e05f31e
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testCreateVisitError;178-190;178-190;e5534fb75d850c4545163663e23717c4;ce956057422ea3817490b5e9d76ab48a;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestCreateVisitError()throwsException{VisitnewVisit=visits.get(0)|newVisit.setId(null)|newVisit.setDescription(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|this.mockMvc.perform(post("/api/visits/").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};02beb8407dd0fd59149b0f0b56c44404;1a52d4cfced141e904be0824af1cba41
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testUpdateVisitSuccess;192-213;192-213;d4881c594ef9eaeb7401c50ee0e97695;9401e48bd5b31d6f3bf7582951aabc07;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateVisitSuccess()throwsException{given(this.clinicService.findVisitById(2)).willReturn(visits.get(0))|VisitnewVisit=visits.get(0)|newVisit.setDescription("rabiesshottest")|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|this.mockMvc.perform(put("/api/visits/2").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(content().contentType("application/json")).andExpect(status().isNoContent())|this.mockMvc.perform(get("/api/visits/2").accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isOk()).andExpect(content().contentType("application/json")).andExpect(jsonPath("$.id").value(2)).andExpect(jsonPath("$.description").value("rabiesshottest"))|};ca3119297e1ea6cf2c8162baf07f43d4;c6732797d37527e24e7ba087d418669e
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testUpdateVisitError;215-226;215-226;a33ce9182b89a5d0bfdf2017e3ba3353;82dbf627ed4e31f671176018e6b67217;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestUpdateVisitError()throwsException{VisitnewVisit=visits.get(0)|newVisit.setDescription(null)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|this.mockMvc.perform(put("/api/visits/2").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isBadRequest())|};010919c53703cbe5c94ad5c1585dd360;ea29a2be363770761afacc13b34d810d
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testDeleteVisitSuccess;228-239;228-239;ee4cb5fd78e927a8acc6908b7ea613d0;744da065971dac1d2dcdd764bfbfd10d;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeleteVisitSuccess()throwsException{VisitnewVisit=visits.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|given(this.clinicService.findVisitById(2)).willReturn(visits.get(0))|this.mockMvc.perform(delete("/api/visits/2").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNoContent())|};660e4e9a86c2410878a274de93dbb7a1;09fb1c213f5c24527e0ded9104003e97
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;IgnoredTest;testDeleteVisitError;241-252;241-252;289674d145d788b5ec0e6fcbc883c5a4;ec5fb38eae962ca15ff06ff8f9d85483;@Test@WithMockUser(roles="OWNER_ADMIN")voidtestDeleteVisitError()throwsException{VisitnewVisit=visits.get(0)|ObjectMappermapper=newObjectMapper()|mapper.registerModule(newJavaTimeModule())|StringnewVisitAsJSON=mapper.writeValueAsString(visitMapper.toVisitDto(newVisit))|given(this.clinicService.findVisitById(999)).willReturn(null)|this.mockMvc.perform(delete("/api/visits/999").content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE)).andExpect(status().isNotFound())|};b3a84c4c334039c115a9b0b9789b91e1;1b8e4ad40e1e8c733f9ba3d447bef15f
qsofttestestest;VisitRestControllerTests;C:\Users\user\.jnose_projects\qsofttestestest\project\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java;C:\Users\user\.jnose_projects\qsofttestestest\project\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java;JUnit5;254;16;Print Statement;testCreateVisitSuccess;172;172;b0af7ff5a350a288c0d7163d3abdd99c;981cbb9fc0be6de2adbe1d0fd6003c4f
